---
- name: Output current iteration
  debug:
    msg: "Iteration: {{ iteration }}"

- name: "Check if persona {{ iteration }} exists"
  postgresql_query:
    login_host: "{{ db_login_host }}"
    db: "{{ db_name }}"
    login_user: "{{ db_login_user }}"
    login_password: "{{ db_login_password }}"
    query: SELECT id FROM users WHERE id = %s
    positional_args:
      - "{{ iteration }}"
  register: persona_exists

- block:

    - name: "Initialize characteristics list for persona {{ iteration }}"
      set_fact:
        characteristics: []

    - name: "Loop over keys in JSON data for persona {{ iteration }}"
      loop: "{{ data.keys() | list }}"
      loop_control:
        loop_var: key
      vars:
        key: "{{ item }}"
      include_tasks: persona-generator-create-characteristics.yaml

    - name: "Format characteristics for persona {{ iteration }}"
      set_fact:
        characteristics_string: "{{ characteristics | join('\n') }}"

    - name: "Output assembled characteristics for persona {{ iteration }}"
      debug:
        msg: |
          CHARACTERISTICS:

          {{ characteristics_string }}

    - name: "Generate persona {{ iteration }} using LLM"
      lwe_llm:
        profile: "{{ profile }}"
        preset: "{{ preset }}"
        preset_overrides:
          metadata:
            return_on_function_response: true
          model_customizations:
            model_kwargs:
              function_call:
                name: generate_persona_name_description
              functions:
                - generate_persona_name_description
        message: |
          Generate a 100-200 word persona for someone with the following characteristics:

          {{ characteristics_string }}

          Also generate both a first and last name for the persona. The full name should be highly unique, and stand out as uncommon.
      register: llm_result
      until: llm_result is succeeded
      delay: 10
      retries: 3

    - name: "Output generated persona {{ iteration }}"
      debug:
        msg: |
          PERSONA:

          {{ llm_result.response }}

    - name: "Store created persona in {{ iteration }} in the database"
      postgresql_query:
        login_host: "{{ db_login_host }}"
        db: "{{ db_name }}"
        login_user: "{{ db_login_user }}"
        login_password: "{{ db_login_password }}"
        query:
          - "INSERT INTO users (id, username, created_at) VALUES (%(id)s, %(username)s, NOW())"
          - "INSERT INTO personas (user_id, characteristics, description) VALUES (%(id)s, %(characteristics)s, %(description)s)"
        named_args:
          id: "{{ iteration }}"
          username: "{{ llm_result.response.name }}"
          characteristics: "{{ characteristics_string }}"
          description: "{{ llm_result.response.description }}"
    - name: "Store characteristics and persona in file for persona {{ iteration }}"
      copy:
        dest: "{{ output_dir }}/persona-{{ iteration }}"
        content: |
          CHARACTERISTICS:

          {{ characteristics_string }}

          PERSONA:

          {{ llm_result.response }}

  when: persona_exists.rowcount == 0
